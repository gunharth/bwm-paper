
@book{aterBuildingProgressiveWeb2017,
  abstract = {Move over native apps. New progressive web apps have capabilities that will soon make you obsolete. With this hands-on guide, web developers and business execs will learn how--and why--to develop web apps that take advantage of features that have so far been exclusive to native apps. Features that include fast load times, push notifications, offline access, homescreen shortcuts, and an entirely app-like experience. By leveraging the latest browser APIs, progressive web apps combine all of the benefits of native apps, while avoiding their issues. Throughout the book, author Tal Ater shows you how to improve a simple website for the fictional Gotham Imperial Hotel into a modern progressive web app. Plus:Understand how service workers work, and use them to create sites that launch in an instant, regardless of the user's internet connection. Create full-screen web apps that launch from the phone's homescreen just like native apps. Re-engage users with push notifications, even days after they have left your site. Embrace offline-first and build web apps that gracefully handle loss of connectivity. Explore new UX opportunities and challenges presented by progressive web apps},
  address = {{Sebastopol, CA}},
  author = {Ater, Tal},
  edition = {First edition},
  isbn = {978-1-4919-6165-0},
  keywords = {Application software,COMPUTERS / Programming / Mobile Devices,COMPUTERS / Programming Languages / HTML,COMPUTERS / Programming Languages / JavaScript,COMPUTERS / Web / Browsers,COMPUTERS / Web / Site Design,COMPUTERS / Web / Web Programming,COMPUTERS / Web / Web Services \& APIs,Development,Mobile apps,Web applications},
  lccn = {005.3},
  note = {OCLC: ocn956340441},
  publisher = {{O'Reilly Media}},
  shorttitle = {Building Progressive Web Apps},
  title = {Building Progressive Web Apps: Bringing the Power of Native to the Browser},
  year = {2017}
}

@incollection{biorn-hansenProgressiveWebApps2018,
  address = {{Cham}},
  author = {{Bi{\o}rn-Hansen}, Andreas and Majchrzak, Tim A. and Gr{\o}nli, Tor-Morten},
  booktitle = {Web {{Information Systems}} and {{Technologies}}},
  doi = {10.1007/978-3-319-93527-0_4},
  editor = {Majchrzak, Tim A. and Traverso, Paolo and Krempels, Karl-Heinz and Monfort, Val{\'e}rie},
  isbn = {978-3-319-93526-3 978-3-319-93527-0},
  language = {en},
  pages = {64-86},
  publisher = {{Springer International Publishing}},
  title = {Progressive {{Web Apps}} for the {{Unified Development}} of {{Mobile Applications}}},
  volume = {322},
  year = {2018}
}

@misc{brownProgressiveWebApps2017,
  abstract = {A conversation with Adam Brown, Executive Creative Director, Gorilla Group about Progressive Web Apps for mobile commerce.},
  author = {Brown, Adam},
  file = {/Users/Guni/Zotero/storage/W58ITDHV/progressive-web-apps-the-future-of-mobile-commerce.html},
  howpublished = {\url{https://www.mobify.com/insights/progressive-web-apps-the-future-of-mobile-commerce/}},
  journal = {Mobify},
  language = {en-US},
  month = apr,
  note = {Retrieved 2019-08-09T09:31:36Z},
  shorttitle = {Progressive {{Web Apps}}},
  title = {Progressive {{Web Apps}}: The {{Future}} of {{Mobile Commerce}}},
  year = {2017}
}

@misc{caputaFewTipsThat2019,
  abstract = {On March 30, the long-awaited iOS 11.3 update was released, with support for basic PWA features on iPhones and iPads, such as service workers and app manifest files. Although it is great that these are finally supported, the user experience of Progressive Web Applications on iOS is still not perfect.},
  author = {Caputa, Maciej},
  howpublished = {\url{https://www.netguru.com/codestories/few-tips-that-will-make-your-pwa-on-ios-feel-like-native}},
  note = {Retrieved 2019-07-30},
  title = {A {{Few Tips That Will Make Your PWA}} on {{iOS Feel Like Native}} | {{Netguru Blog}} on {{Mobile}}},
  year = {2019}
}

@misc{croomBuildingNewTwitter2019,
  abstract = {We've rebuilt the new Twitter.com in the image of what we want Twitter's future to be: personalized, efficient, faster and more conversational.},
  author = {Croom, Charly and Baker, Gregory},
  file = {/Users/Guni/Zotero/storage/HWCMLJF5/buildingthenewtwitter.html},
  howpublished = {\url{https://blog.twitter.com/engineering/en_us/topics/infrastructure/2019/buildingthenewtwitter.html}},
  language = {en\_us},
  month = jul,
  note = {Retrieved 2019-08-02T09:20:08Z},
  title = {Building the New {{Twitter}}.Com},
  year = {2019}
}

@book{hajianProgressiveWebApps2019,
  abstract = {Harness the power of Angular to build fast, high performance progressive web apps that work offline. Learn exactly how to create an Angular Progressive Web App (PWA) from scratch, how you can use different tools to audit and improve it, and leverage Angular CLI or Workbox to turn your app into a PWA. Using browser APIs \textendash{} including the Credential Management, Payment Request, Geolocation, Web Bluetooth, WebUSB and Generic Sensors APIs \textendash{} you can unleash the potential of PWAs and build applications that enhance user experience. Angulars game-changing built-in features, including the Angular service worker module, can be leveraged to construct responsive and reliable PWAs that can look and feel just like native mobile apps. You'll learn how to boost your app speed, how to increase user engagement using push notifications, and how to implement offline storage and different caching APIs in Angular. You'll even see how to convert an existing Angular app into a PWA. Whether youre new to building PWAs, or want to learn how to use Angular to improve your app development, Progressive Web Apps with Angular provides the know-how to build and deploy an Angular PWA.},
  author = {Hajian, Majid},
  isbn = {978-1-4842-4448-7},
  language = {English},
  note = {OCLC: 1103217873},
  shorttitle = {Progressive Web Apps with {{Angular}}},
  title = {Progressive Web Apps with {{Angular}}: Create Responsive, Fast and Reliable {{PWAs}} Using {{Angular}}},
  year = {2019}
}

@book{humeProgressiveWebApps2018,
  abstract = {Offline websites that work. Near-instant load times. Smooth transitions between high/low/no bandwidth. Fantasy, right? Not with progressive web applications. PWAs use modern browser features like push notifications, smart caching, and Service Workers to manage data, minimize server usage, and allow for unstable connections, giving you better control and happier customers. Better still, all you need to build PWAs are JavaScript, HTML, and the easy-to-master techniques you'll find in this book},
  address = {{Shelter Island, New York}},
  author = {Hume, Dean Alan and Osmani, Addy},
  isbn = {978-1-61729-458-7},
  keywords = {Apps,Ontwikkeling (proces),Web applications,Web site development,Websites},
  lccn = {QA76.76.A65 H85 2018},
  note = {OCLC: on1017992176},
  publisher = {{Manning Publications}},
  title = {Progressive Web Apps},
  year = {2018}
}

@misc{karkiProgressiveWebApplications2019,
  abstract = {Current web platform and browsers are adequately powerful to support mobile and  desktop applications. Application Program Interfaces (APIs) that support the integration  of mobile device and web browsers can execute features such as notifications, push  messages, home screen icon, device camera and so on. The concept of progressive web apps is to make regular websites functional as mobile and desktop app, without compromising the user experience of traditionally used native apps. In order to  understand the concept of Progressive Web Apps (PWAs), a functional app was created  using HTML, CSS, JavaScript, along with the manifest file, service workers, and web  APIs.  
 
The primary objective of the thesis was to understand and implement the technologies  of Progressive Web Applications (PWAs). Hence, a detailed study of the topic and  development of a PWA was also carried out. The study showed that one PWA could  serve the function of a website, mobile app and a desktop app efficiently. On one hand,  the technology used for making a PWA is not too complicated for web developers using  HTML, CSS, and JavaScript, and on the other hand, simple files can turn an existing  HTTPS website into a fully functional app, saving the cost of developing a new native app.},
  author = {Karki, Archana},
  copyright = {CC BY-NC 4.0},
  file = {/Users/Guni/Zotero/storage/NY2VWNF7/Karki - 2019 - Progressive Web Applications(PWAs)  powerful webs.pdf;/Users/Guni/Zotero/storage/PFSIHHSH/Progressive_Web_Applications.pdf;/Users/Guni/Zotero/storage/LIJYTHBF/179594.html},
  howpublished = {\url{http://www.theseus.fi/handle/10024/179594}},
  language = {eng},
  note = {Retrieved 2019-08-05T18:08:03Z},
  shorttitle = {Progressive {{Web Applications}}({{PWAs}})},
  title = {Progressive {{Web Applications}}({{PWAs}}) : Powerful Websites, Functional as Native Mobile Apps},
  type = {Fi={{AMK}}-Opinn{\"a}ytety{\"o}|sv={{YH}}-Examensarbete|en={{Bachelor}}'s Thesis|},
  year = {2019}
}

@book{liebelProgressiveWebApps2019,
  address = {{Bonn}},
  author = {Liebel, Christian},
  edition = {1},
  isbn = {978-3-8362-6494-5},
  language = {ger},
  publisher = {{Rheinwerk Verlag}},
  series = {{Rheinwerk Computing}},
  shorttitle = {{Progressive Web Apps}},
  title = {{Progressive Web Apps: das Praxisbuch}},
  year = {2019}
}

@book{loveProgressiveWebApplication2018,
  author = {Love, Chris},
  isbn = {978-1-78712-542-1},
  language = {English},
  note = {OCLC: 1091852637},
  shorttitle = {Progressive Web Application Development by Example},
  title = {Progressive Web Application Development by Example: Develop Fast, Reliable, and Engaging User Experiences for the Web},
  year = {2018}
}

@inproceedings{malavoltaNativeAppsWeb2016,
  address = {{Amsterdam, Netherlands}},
  author = {Malavolta, Ivano},
  booktitle = {Proceedings of the 1st {{International Workshop}} on {{Mobile Development}} - {{Mobile}}! 2016},
  doi = {10.1145/3001854.3001863},
  isbn = {978-1-4503-4643-6},
  language = {en},
  pages = {1-2},
  publisher = {{ACM Press}},
  shorttitle = {Beyond Native Apps},
  title = {Beyond Native Apps: Web Technologies to the Rescue! (Keynote)},
  year = {2016}
}

@article{nguyen2019progressive,
  author = {Nguyen, Phuong Hoa},
  file = {/Users/Guni/Nextcloud/fh/Mobile_Informationssysteme/bwm_references/Nguyen_Phuong.pdf},
  title = {Progressive {{Web App}} in {{Enhancing App Experience}}: {{Life Care Insurance Claim Application}}},
  year = {2019}
}

@misc{osmaniGettingStartedProgressive2015,
  abstract = {There's been much welcome discussion about Progressive Web Apps lately. They're still a relatively new model, but their principles can equally enhanc...},
  author = {Osmani, Addy},
  file = {/Users/Guni/Zotero/storage/WJG34Q9J/getting-started-with-progressive-web-apps.html},
  howpublished = {\url{https://addyosmani.com/blog/getting-started-with-progressive-web-apps/}},
  language = {en},
  note = {Retrieved 2019-06-08},
  title = {Getting Started with {{Progressive Web Apps}}},
  year = {2015}
}

@misc{russellProgressiveWebApps2015,
  author = {Russell, Alex},
  file = {/Users/Guni/Zotero/storage/H8KK3MHT/progressive-apps-escaping-tabs-without-losing-our-soul.html},
  howpublished = {\url{https://infrequently.org/2015/06/progressive-apps-escaping-tabs-without-losing-our-soul/}},
  month = jun,
  note = {Retrieved 2019-08-02},
  shorttitle = {Progressive {{Web Apps}}},
  title = {Progressive {{Web Apps}}: {{Escaping Tabs Without Losing Our Soul}} \textendash{} {{Infrequently Noted}}},
  year = {2015}
}

@book{sheppardBeginningProgressiveWeb2017,
  address = {{New York}},
  author = {Sheppard, Dennis},
  file = {/Users/Guni/Nextcloud/fh/Mobile_Informationssysteme/bwm_references/[Dennis_Sheppard_(auth.)]_Beginning_Progressive_We(z-lib.org).pdf},
  isbn = {978-1-4842-3090-9 978-1-4842-3089-3},
  language = {eng},
  note = {OCLC: 1018305973},
  publisher = {{Apress}},
  shorttitle = {Beginning {{Progressive Web App Development}}},
  title = {Beginning {{Progressive Web App Development}}: {{Creating}} a {{Native App Experience}} on the {{Web}}},
  year = {2017}
}

@misc{wikipediaMinimumViableProduct2019,
  abstract = {A minimum viable product (MVP) is a product with just enough features to satisfy early customers, and to provide feedback for future product development.Gathering insights from an MVP is often less expensive than developing a product with more features, which increases costs and risk if the product fails, for example, due to incorrect assumptions. The term was coined and defined in 2001 by Frank Robinson, and then popularized by Steve Blank and Eric Ries.
It may also involve carrying out market analysis beforehand.},
  author = {Wikipedia},
  copyright = {Creative Commons Attribution-ShareAlike License},
  file = {/Users/Guni/Zotero/storage/DXQHRS9E/index.html},
  howpublished = {\url{https://en.wikipedia.org/w/index.php?title=Minimum_viable_product\&oldid=906835119}},
  journal = {Wikipedia},
  language = {en},
  month = jul,
  note = {Retrieved 2019-08-07},
  title = {Minimum Viable Product},
  year = {2019}
}


